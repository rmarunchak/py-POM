version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.8
    environment:
      LT_USERNAME: your_lambda_test_username
      LT_ACCESS_KEY: your_lambda_test_access_key
    steps:
      - checkout
      - run:
          name: Load Environment Variables
          command: |
            set -a
            source .env
            set +a
      - run:
          name: Install Google Chrome
          command: |
            sudo apt-get update
            sudo apt-get install -y wget
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo apt install ./google-chrome-stable_current_amd64.deb
            echo "Google Chrome installation completed successfully."
      - run:
          name: Upgrade pip
          command: |
            python -m pip install --upgrade pip
            echo "Pip upgrade completed successfully."
      - run:
          name: Set up virtual environment
          command: |
            python -m venv venv
            echo "source venv/bin/activate" >> $BASH_ENV
            echo "Virtual environment setup completed successfully."
      - run:
          name: Install webdriver_manager
          command: |
            pip install webdriver_manager
            echo "Webdriver Manager installation completed successfully."
      - run:
          name: Upgrade pytest-selenium and pytest
          command: |
            pip install --upgrade pytest-selenium pytest
            echo "Pytest-selenium and pytest upgrade completed successfully."
      - run:
          name: Install conflicting packages
          command: |
            pip install packaging==20.4 platformdirs==2.0
            echo "Conflicting packages installation completed successfully."
      - run:
          name: Install dependencies from requirements.txt
          command: |
            pip install -r requirements.txt
            echo "Dependencies installation from requirements.txt completed successfully."
      - run:
          name: Upgrade webdriver_manager
          command: |
            python3 -m pip install webdriver-manager --upgrade
            echo "Webdriver Manager upgraded successfully."
      - run:
          name: Run tests
          command: |
            pytest tests/test_registration.py --alluredir=./results_directory --remote
            echo "Tests run completed successfully."
      - run:
          name: Generate Allure report
          command: |
            allure generate ./results_directory -o ./allure-report
            echo "Allure report generation completed successfully."
      - store_artifacts:
          path: ./allure-report
          destination: allure-report
      - run:
          name: Store Allure report artifact
          command: echo "Allure report artifact stored successfully."

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
